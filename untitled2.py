# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled2.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
import pandas as pd
import matplotlib.pyplot as plt
from PyQt5 import QtWidgets, QtGui, QtCore
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QFileDialog, QLabel, QComboBox, QVBoxLayout, QWidget


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 150, 171, 41))
        self.label.setObjectName("X Axis")
        self.combo_label = QtWidgets.QComboBox(self.centralwidget)
        self.combo_label.setGeometry(QtCore.QRect(40, 200, 171, 22))
        self.combo_label.setObjectName("combo_label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(30, 20, 151, 51))
        self.pushButton.setObjectName("pushButton")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(280, 160, 111, 31))
        self.label_2.setObjectName("Y Axis")
        self.combo_label_2 = QtWidgets.QComboBox(self.centralwidget)
        self.combo_label_2.setGeometry(QtCore.QRect(280, 200, 171, 22))
        self.combo_label_2.setObjectName("combo_label_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(30, 310, 111, 41))
        self.pushButton_2.setObjectName("Bar_Chart_View")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(270, 310, 91, 41))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(460, 310, 101, 41))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(40, 420, 141, 51))
        self.pushButton_5.setObjectName("pushButton_5")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton.clicked.connect(self.load_csv)
        self.pushButton_2.clicked.connect(self.generate_bar_charts)
        self.pushButton_3.clicked.connect(self.generate_Line_charts)
        self.pushButton_4.clicked.connect(self.generate_Scatter_charts)
        self.pushButton_5.clicked.connect(self.generate_Pie_charts)

    def load_csv(self):
         options = QFileDialog.Options()
         file_name, _ = QFileDialog.getOpenFileName(None, "Load Files", "", "CSV Files (*.csv)", options=options)
         if file_name:
            self.df = pd.read_csv(file_name)
            self.df=self.df.head(900)
            columns = self.df.columns.tolist()
            self.combo_label.addItems(columns)
            self.combo_label_2.addItems(columns)

    def generate_bar_charts(self):
        if self.df is None:
            return

        x_column = self.combo_label.currentText()
        y_column = self.combo_label_2.currentText()
        fig, axs = plt.subplots(1, 1, figsize=(10, 8))
        axs.bar(self.df[x_column], self.df[y_column])
        #axs[0, 0].bar(self.df[x_column], self.df[y_column])
        axs.set_title('Bar Chart')
        axs.set_xlabel(self.combo_label.currentText())  # Set the label for the x-axis
        axs.set_ylabel(self.combo_label_2.currentText())
        plt.show()

    def generate_Line_charts(self):
        if self.df is None:
            return

        x_column = self.combo_label.currentText()
        y_column = self.combo_label_2.currentText()
        fig, axs = plt.subplots(1, 1, figsize=(10, 8))
        axs.plot(self.df[x_column], self.df[y_column])
        #axs[0, 0].bar(self.df[x_column], self.df[y_column])
        axs.set_title('line Chart')
        axs.set_xlabel(self.combo_label.currentText())  # Set the label for the x-axis
        axs.set_ylabel(self.combo_label_2.currentText())
        plt.show()

    def generate_Scatter_charts(self):
        if self.df is None:
            return

        x_column = self.combo_label.currentText()
        y_column = self.combo_label_2.currentText()
        fig, axs = plt.subplots(1, 1, figsize=(10, 8))
        axs.scatter(self.df[x_column], self.df[y_column])
        #axs[0, 0].bar(self.df[x_column], self.df[y_column])
        axs.set_title('Scatter Chart')
        axs.set_xlabel(self.combo_label.currentText())  # Set the label for the x-axis
        axs.set_ylabel(self.combo_label_2.currentText())
        plt.show()

    def generate_Pie_charts(self):
        if self.df is None:
            return

        x_column = self.combo_label.currentText()
        y_column = self.combo_label_2.currentText()
        fig, axs = plt.subplots(1, 1, figsize=(10, 8))
        axs.pie(self.df[x_column], self.df[y_column],autopct='%1.1f%%')
        #axs[0, 0].bar(self.df[x_column], self.df[y_column])
        axs.set_title('Pie Chart')
        axs.set_xlabel(self.combo_label.currentText())  # Set the label for the x-axis
        axs.set_ylabel(self.combo_label_2.currentText())
        plt.show()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "X Axis"))
        self.pushButton.setText(_translate("MainWindow", "Load Files"))
        self.label_2.setText(_translate("MainWindow", "Y Axis"))
        self.pushButton_2.setText(_translate("MainWindow", "Bar Chart View"))
        self.pushButton_3.setText(_translate("MainWindow", "Line Chart View"))
        self.pushButton_4.setText(_translate("MainWindow", "Scatter Chart View"))
        self.pushButton_5.setText(_translate("MainWindow", "Pie Chart View"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
